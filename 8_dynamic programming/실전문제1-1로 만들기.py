'''
정수 X가 주어질 때, 정수 X에 사용할 수 있는 연산은 다음과 같이 4가지이다.
1. 5로 나누어 떨어지면 5로 나눈다.
2. 3으로 나누어떨어지면 3으로 나눈다.
3. X가 2로 나누어떨어지면, 2로 나눈다.
4. X에서 1을 뺀다.
'''
# 해설 풀이
# 정수 X를 입력받기
x = int(input())
x = 26

# 앞서 계산된 결과를 저장하기 위한 DP 테이블 초기화
# 주어지는 정수가 1 <= X <= 30,000이므로 이와 같이 초기화하며, 1인 경우 연산 수행이 필요없기 때문에 0으로 초기화 함.
d = [0] * 30001

# 다이나믹 프로그래밍 진행(Bottom-up)
for i in range(2, x+1): # 2부터 30000까지 각각의 경우에 대해 진행
    # 현재의 수에서 1을 빼는 경우
    d[i] = d[i-1] + 1 # 4가지 연산의 경우에 각각의 최적해에서 1을 더한 것이 최적 연산 횟수이므로
    # 현재의 수가 2로 나누어 떨어지는 경우
    if i % 2 == 0:
        d[i] = min(d[i], d[i // 2] + 1)
    # 현재의 수가 3으로 나누어 떨어지는 경우
    if i % 3 == 0:
        d[i] = min(d[i], d[i // 3] + 1)
    # 현재의 수가 5로 나누어 떨어지는 경우
    if i % 5 == 0:
        d[i] = min(d[i], d[i // 5] + 1)
'''
i번째까지의 연산 수의 합을 a_i라고 하면,
a_i = min(a_i-1, a_n/2, a_n/3, a_n/5) + 1 이다.
이전까지 수행된 연산에서 4가지 중 하나의 연산이 더 수행되어야하기 때문.

min의 인자로 d[i]는 왜 들어갈까?
-> i가 각각 2, 3, 5인 경우 d[i//n은] d[1]이되고, d[1]은 0이기 때문에 1을 더한 값이 아니라, minimum값인 0으로 선택되어야 하기 때문.
'''